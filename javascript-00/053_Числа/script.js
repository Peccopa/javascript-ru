'use strict';

// Сумма пользовательских чисел
// важность: 5
// Создайте скрипт, который запрашивает ввод двух чисел (используйте prompt) и после показывает их сумму.
// P.S. Есть «подводный камень» при работе с типами.

// const numSum = () => {
//   const num1 = +prompt('num 1', 0);
//   const num2 = +prompt('num 2', 0);
//   alert(num1 + num2);
// };

// console.log(numSum());

// Почему 6.35.toFixed(1) == 6.3?
// важность: 4
// Методы Math.round и toFixed, согласно документации, округляют до ближайшего целого числа: 0..4 округляется в меньшую сторону, тогда как 5..9 в большую сторону.
// Например:

// alert( 1.35.toFixed(1) ); // 1.4
// Но почему в примере ниже 6.35 округляется до 6.3?

// alert( 6.35.toFixed(1) ); // 6.3
// Как правильно округлить 6.35?

// alert( Math.round(6.35 * 10) / 10 );

// Ввод числового значения
// важность: 5
// Создайте функцию readNumber, которая будет запрашивать ввод числового значения до тех пор, пока посетитель его не введёт.

// Функция должна возвращать числовое значение.

// Также надо разрешить пользователю остановить процесс ввода, отправив пустую строку или нажав «Отмена». В этом случае функция должна вернуть null.

// const readNumber = () => {
//   const num = prompt('Enter the number:') || null;
//   return isNaN(num) ? readNumber() : alert(num);
// };

// console.log(readNumber());

// Случайное число от min до max
// важность: 2
// Встроенный метод Math.random() возвращает случайное число от 0 (включительно) до 1 (но не включая 1)

// Напишите функцию random(min, max), которая генерирует случайное число с плавающей точкой от min до max (но не включая max).

// const random = (min, max) => {
// return Math.random(min, max);
// };

// Пример работы функции:

// alert(random(1, 5)); // 1.2345623452
// alert( random(1, 5) ); // 3.7894332423
// alert( random(1, 5) ); // 4.3435234525

// Случайное целое число от min до max
// важность: 2
// Напишите функцию randomInteger(min, max), которая генерирует случайное целое (integer) число от min до max (включительно).

// Любое число из интервала min..max должно появляться с одинаковой вероятностью.

// Пример работы функции:

const randomInteger = function (min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1) + min);
};

console.log(randomInteger(0, 5)); // 1
// console.log(randomInteger(1, 5)); // 1
// console.log(randomInteger(1, 5)); // 3
// console.log(randomInteger(1, 5)); // 5
